---
- hosts: localhost
  gather_facts: no
  module_defaults:
    group/aws:
      region: "us-east-2"
  tasks:
    - name: Create VPC
      ec2_vpc_net:
        name: Module5
        cidr_block: 10.10.0.0/16
        tags:
          Module: 5
        state: present 
      register: vpc
    - set_fact:
        vpc: "{{ vpc }}"
    - name: Create public subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 public
          Module: 5
        cidr: 10.10.1.0/24
        state: present
      register: public_subnet
    - name: Create private subnet 1
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 private 1
          Module: 5
        cidr: 10.10.2.0/24
        az: us-east-2a
        state: present       
      register: private_subnet_1
    - name: Create private subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 private 2
          Module: 5
        cidr: 10.10.3.0/24
        az: us-east-2b
        state: present       
      register: private_subnet_2
    - name: Create internet gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 gateway
        state: present
      register: igw           
    - name: Create public route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5pub
        subnets:
          - "{{ public_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
    - name: Create IG NAT gateway
      ec2_vpc_nat_gateway:
        subnet_id: "{{ public_subnet.subnet.id }}"
        #wait: yes #or hard-code an eip_address
        if_exist_do_not_create: yes
        state: present
      register: public_nat
    #- name: Create Private NAT gateway
    #  ec2_vpc_nat_gateway:
    #    subnet_id: "{{ private_subnet.subnet.id }}"
    #    wait: yes #or hard-code an eip_address
    #    state: present
    #  register: private-nat
    - name: Create private route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5prv
        subnets: ["{{ private_subnet_1.subnet.id }}", "{{ private_subnet_2.subnet.id }}"]
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ public_nat.nat_gateway_id }}"
    - name: Create public ACL
      ec2_vpc_nacl:
        vpc_id: "{{ vpc.vpc.id }}"
        name: public-acl
        subnets:
          - "{{ public_subnet.subnet.id }}" #or just public_subnet
        tags:
          Name: Module 5
        ingress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
          - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
          - [300, 'tcp', 'allow', '76.204.247.153/32', null, null, 80, 80]
          - [310, 'tcp', 'allow', '76.204.247.153/32', null, null, 443, 443]
          - [500, 'tcp', 'allow', '24.196.25.139/32', null, null, 80, 80]
          - [510, 'tcp', 'allow', '24.196.25.139/32', null, null, 443, 443]
          - [600, 'tcp', 'allow', '24.239.105.213/32', null, null, 80, 80]
          - [610, 'tcp', 'allow', '24.239.105.213/32', null, null, 443, 443]
        egress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
          - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
          - [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443]
          #- [400, 'tcp', 'allow', '0.0.0.0/0', 22, 22]
        state: present
    - name: Create private ACL
      ec2_vpc_nacl:
        vpc_id: "{{ vpc.vpc.id }}"
        name: private-acl
        subnets: ["{{ private_subnet_1.subnet.id }}", "{{ private_subnet_2.subnet.id }}"]
        tags:
          Name: Module 5
        ingress:
          - [100, 'tcp', 'allow', '10.10.0.0/16', null, null, 5432, 5432]
          #- [200, 'tcp', 'allow', 10.10.0.0/16, null, null, 5432, 5432]
          - [200, 'all', 'allow', '10.10.0.0/16', null, null, 443, 443]
          - [300, 'all', 'allow', '10.10.0.0/16', null, null, 1024, 65535]
          #- [400, 'all', 'allow', 10.10.2.0/24, null, null, 443, 443]
        egress:
          - [100, 'tcp', 'allow', '10.10.0.0/16', null, null, 1024, 65535]
          - [200, 'tcp', 'allow', '10.10.0.0/16', null, null, 443, 443]
          #- [200, 'all', 'allow', 10.10.0.0/24, 'all', 'all']
          #- [300, 'all', 'allow', 10.10.1.0/24, 'all', 'all']
        state: present
    #- name: Create default security group
    #  ec2_group:
     #   name: Module5-developer-sg
      #  description: Default security group for VPC
       # vpc_id: "{{ vpc.vpc.id }}"
        #rules:
        #  - proto: tcp
        #    ports: all
        #    cidr_ip: 0.0.0.0/0
        #    rule_desc: Allow all inbound traffic
        #state: present
    - set_fact:
        public_nat_id: "{{ public_nat.nat_gateway_id }}"
        public_sn_id: "{{ public_subnet.subnet.id}}"
        #private_nat_id: "{{ private_nat.nat_gateway_id }}"
        private_sn_ids: ["{{ private_subnet_1.subnet.id }}", "{{ private_subnet_2.subnet.id }}"]

